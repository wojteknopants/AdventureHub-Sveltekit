import { SvelteComponentTyped } from "svelte";
import type { TransitionTypes, TransitionParamTypes } from '../types';
declare const __propDef: {
    props: {
        [x: string]: any;
        btnClass?: string | undefined;
        label?: string | undefined;
        spanClass?: string | undefined;
        ulClass?: string | undefined;
        transitionType?: TransitionTypes | undefined;
        transitionParams?: TransitionParamTypes | undefined;
        isOpen?: boolean | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        icon: {};
        arrowup: {};
        arrowdown: {};
        default: {};
    };
};
export type SidebarDropdownWrapperProps = typeof __propDef.props;
export type SidebarDropdownWrapperEvents = typeof __propDef.events;
export type SidebarDropdownWrapperSlots = typeof __propDef.slots;
/**
 * [Go to Sidebar](https://flowbite-svelte.com/docs/components/sidebar)
 * ## Props
 * @prop btnClass: string = 'flex items-center p-2 w-full text-base font-normal text-gray-900 rounded-lg transition duration-75 group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700';
 * @prop label: string = '';
 * @prop spanClass: string = 'flex-1 ml-3 text-left whitespace-nowrap';
 * @prop ulClass: string = 'py-2 space-y-2';
 * @prop transitionType: TransitionTypes = 'slide';
 * @prop transitionParams: TransitionParamTypes = {};
 */
export default class SidebarDropdownWrapper extends SvelteComponentTyped<SidebarDropdownWrapperProps, SidebarDropdownWrapperEvents, SidebarDropdownWrapperSlots> {
}
export {};
//# sourceMappingURL=SidebarDropdownWrapper.svelte.d.ts.map