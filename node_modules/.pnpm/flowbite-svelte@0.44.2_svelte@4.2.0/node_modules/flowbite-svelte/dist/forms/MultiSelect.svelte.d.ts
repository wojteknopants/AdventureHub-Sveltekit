import { SvelteComponentTyped } from "svelte";
import type { FormSizeType, SelectOptionType } from '../types';
declare const __propDef: {
    props: {
        [x: string]: any;
        items?: SelectOptionType[] | undefined;
        value?: (string | number)[] | undefined;
        size?: FormSizeType | undefined;
        dropdownClass?: string | undefined;
    };
    events: {
        selected: CustomEvent<any>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {
            item: SelectOptionType;
            clear: () => void;
        };
    };
};
export type MultiSelectProps = typeof __propDef.props;
export type MultiSelectEvents = typeof __propDef.events;
export type MultiSelectSlots = typeof __propDef.slots;
/**
 * [Go to Label](https://flowbite-svelte.com/docs/forms/select#MultiSelect)
 * @prop let items: SelectOptionType[] = [];
 * @prop let value: (string | number)[] = [];
 * @prop let size: FormSizeType = 'md';
 * @prop let dropdownClass: string = '';
 */
export default class MultiSelect extends SvelteComponentTyped<MultiSelectProps, MultiSelectEvents, MultiSelectSlots> {
}
export {};
//# sourceMappingURL=MultiSelect.svelte.d.ts.map